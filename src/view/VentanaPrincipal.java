/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import controller.ControladorPrincipal;
import java.awt.event.ActionListener;
import javax.swing.JButton;
import java.awt.Color;
import java.awt.event.ActionEvent;
import javax.swing.JOptionPane;
import model.Casilla;

/**
 *
 * @author david
 */
public class VentanaPrincipal extends javax.swing.JFrame implements ActionListener{

    JButton[][] botones;
    private final ControladorPrincipal controlador;
    
    /**
     * Creates new form VentanaPrincipal
     */
    public VentanaPrincipal() {
        initComponents();
        botones = new JButton[3][6];
        controlador = new ControladorPrincipal();
        cargarBotones();
        validarPosiciones();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelBotones = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        javax.swing.GroupLayout panelBotonesLayout = new javax.swing.GroupLayout(panelBotones);
        panelBotones.setLayout(panelBotonesLayout);
        panelBotonesLayout.setHorizontalGroup(
            panelBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 440, Short.MAX_VALUE)
        );
        panelBotonesLayout.setVerticalGroup(
            panelBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelBotones, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelBotones, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void cargarBotones() {
        int ancho = 60;
        int alto = 60;
        int separado = 20;
        int texto = 1;
        for (int i = 0; i < botones.length; i++) {
            for (int j = 0; j < botones[i].length; j++) {
                botones[i][j] = new JButton();
                switch (texto) {
                    case 3:
                    case 4:
                    case 9:
                    case 10:
                    case 15:
                    case 16:
                        botones[i][j].setBounds(
                                (j * ancho + 40),
                                (i * alto + separado),
                                ancho, alto);
                        botones[i][j].setText(String.valueOf(texto));
                        botones[i][j].addActionListener(this);
                        panelBotones.add(botones[i][j]);
                        break;
                    case 5:
                    case 6:
                    case 11:
                    case 12:
                    case 17:
                    case 18:
                        botones[i][j].setBounds(
                                (j * ancho + 60),
                                (i * alto + separado),
                                ancho, alto);
                        botones[i][j].setText(String.valueOf(texto));
                        botones[i][j].addActionListener(this);
                        panelBotones.add(botones[i][j]);
                        break;
                    default:
                        botones[i][j].setBounds(
                                (j * ancho + 20),
                                (i * alto + separado),
                                ancho, alto);
                        botones[i][j].setText(String.valueOf(texto));
                        botones[i][j].addActionListener(this);
                        panelBotones.add(botones[i][j]);
                        break;
                }
                texto++;
            }
            separado+=20;
        }
    }
    
    @Override
    public void actionPerformed(ActionEvent ae) {
        for (int i = 0; i < botones.length; i++) {
            for (int j = 0; j < botones[i].length; j++) {
                if (ae.getSource().equals(botones[i][j])) {
                    Casilla casilla = controlador.obtenerCasilla(i, j);
                    if (casilla.getEstado().equals(Casilla.OCUPADO)) {
                        String[] opciones = {"Ver Información", "Entregar llave"};
                        int op = JOptionPane.showOptionDialog(this, "¿Qué desea hacer?", "Acción a realizar", JOptionPane.DEFAULT_OPTION, JOptionPane.INFORMATION_MESSAGE, null, opciones, null);
                        if(op==1){
                            String ingreso = (String) JOptionPane.showInputDialog(this, "Ingrese la palabra clave:", "Validar palabra clave", JOptionPane.INFORMATION_MESSAGE, null, null, "");
                            try {
                                while(ingreso != null || !ingreso.equals(controlador.obtenerClave(i, j))){
                                    if(ingreso.equals(controlador.obtenerClave(i, j))){
                                        JOptionPane.showMessageDialog(this, "La palabra clave es correcta", "Exito", JOptionPane.INFORMATION_MESSAGE);
                                        ingreso = null;
                                    }else{
                                        JOptionPane.showMessageDialog(this, "La palabra clave es incorrecta", "Error", JOptionPane.ERROR_MESSAGE);
                                        ingreso = (String) JOptionPane.showInputDialog(null, "Ingrese la palabra clave:", "Intentelo de nuevo", JOptionPane.INFORMATION_MESSAGE, null, null, "");
                                    }                                
                                }
                            } catch (NullPointerException e) {
                            }
                        }else if(op == 0){
                            VentanaCarpa vC = new VentanaCarpa(Integer.parseInt(botones[i][j].getText()), i, j);
                            vC.setVisible(true);
                            this.dispose();
                        }
                    } else {
                        VentanaPrestarCarpa vPC = new VentanaPrestarCarpa(Integer.parseInt(botones[i][j].getText()), i, j);
                        vPC.setVisible(true);
                        this.dispose();
                    }
                }
            }
        }
    }
    
    public void validarPosiciones() {
        for (int i = 0; i < botones.length; i++) {
            for (int j = 0; j < botones[i].length; j++) {
                Casilla casilla = controlador.obtenerCasilla(i, j);
                if (casilla.getEstado().equals(Casilla.DESOCUPADO)) {
                    botones[i][j].setBackground(Color.WHITE);
                } else {
                    botones[i][j].setBackground(Color.BLUE);
                    botones[i][j].setForeground(Color.WHITE);
                }
            }
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaPrincipal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel panelBotones;
    // End of variables declaration//GEN-END:variables
}
